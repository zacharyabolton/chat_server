# Base image
FROM erlang:alpine AS builder

# Set the working directory
WORKDIR /app/src
ENV REBAR_BASE_DIR=/app/_build

# Remove unnecessary files
RUN rm -f /etc/apt/apt.conf.d/docker-clean

# Copy all necessary files, including tests
COPY . /app/src/
# build and cache dependencies as their own layer
RUN --mount=id=hex-cache,type=cache,sharing=locked,target=/root/.cache/rebar3 \
    rebar3 as test compile

# Compile including tests but do not tar it
RUN --mount=target=. \
    --mount=id=hex-cache,type=cache,sharing=locked,target=/root/.cache/rebar3 \
    rebar3 as test compile

# Final stage
FROM erlang:alpine AS runner

WORKDIR /opt/chat_server

ENV COOKIE=chat_server \
    # write files generated during startup to /tmp
    RELX_OUT_FILE_PATH=/tmp \
    # chat_server specific env variables to act as defaults
    DB_HOST=127.0.0.1 \
    LOGGER_LEVEL=debug \
    ENV=test \
    SBWT=none

# Copy compiled application and test files
COPY --from=builder /app/src /opt/chat_server

# Set entrypoint to shell for running tests
ENTRYPOINT ["/bin/sh"]
# CMD ["/bin/sh", "-c", "rebar3 as test do eunit, ct"]
